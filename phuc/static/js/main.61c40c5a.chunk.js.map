{"version":3,"sources":["components/layout/SignedLink.js","components/store/action/authAction.js","components/layout/SignedOutLink.js","components/layout/Navbar.js","components/dashbroad/Nofitications.js","components/tips/TIpsSumday.js","components/tips/TipsItem.js","components/dashbroad/Dashboard.js","components/tips/TipsDetail.js","components/auth/SignIn.js","components/auth/SignUp.js","components/tips/CreateTips.js","components/store/action/tipsAction.js","App.js","serviceWorker.js","components/store/reducers/tipsReducerr.js","components/store/reducers/authReducerss.js","components/store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["SignedLink","LogOut","this","props","className","to","onClick","Component","connect","dispatch","getState","getFirebase","auth","signOut","then","type","SignedOutLink","Navbar","linkAuth","uid","state","console","log","firebaseReducer","Nofitications","TIpsSumday","tip","title","content","TipsItem","map","index","id","key","Dashboard","useFirestoreConnect","firebaseConnect","useSelector","firestoreReducer","ordered","tips","compose","ownProps","match","params","data","firestoreConnect","collection","SignIn","handleChange","event","setState","target","value","handleSubmit","preventDefault","signIn","email","password","error","onSubmit","htmlFor","onChange","authReducer","cer","signInWithEmailAndPassword","catch","actionsignIn","SignUp","lastName","firstName","CreateTips","actionTip","onContentStateChange","onEditorStateChange","EditorState","createEmpty","typ","editor","ClassicEditor","getData","onInit","initialEditorState","toolbarClassName","wrapperClassName","editorClassName","Swal","fire","icon","text","getFirestore","add","err","App","path","component","TipsDetail","Boolean","window","location","hostname","initState","tipsReducer","action","null","rootReducer","combineReducers","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","middleWare","thunk","withExtraArgument","store","createStore","applyMiddleware","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","children","isLoaded","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61c40c5a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionsignOut } from \"../store/action/authAction\";\r\nclass SignedLink extends Component {\r\n  render() {\r\n    let { LogOut } = this.props;\r\n    return (\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/CreateTips\">Tips News</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\" onClick={LogOut}>\r\n            Log Out\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n            MM\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    LogOut: ()  => dispatch(actionsignOut())\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(SignedLink);\r\n","export const actionsignIn = cer => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(cer.email, cer.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_OKE\", cer });\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: \"LOGIN_ERR\", error });\r\n      });\r\n  };\r\n};\r\nexport const actionsignOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: \"LOGOUT\" });\r\n    });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default class SignedOutLink extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/SignUp\">SignUp</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/SignIn\">Log In</NavLink>\r\n        </li>\r\n  \r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedLink from \"./SignedLink\";\r\nimport SignedOutLink from \"./SignedOutLink\";\r\nimport { connect } from \"react-redux\";\r\nclass Navbar extends Component {\r\n  render() {\r\n    let { auth } = this.props;\r\n    let linkAuth = auth.uid ? <SignedLink /> : <SignedOutLink />;\r\n\r\n    return (\r\n      <nav className=\"nav-wrapper grey darken-2\">\r\n        <div className=\"\">\r\n          <Link to=\"/\" className=\"brand-logo left\">\r\n            TIPS\r\n          </Link>\r\n          {linkAuth}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebaseReducer.auth\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Nofitications extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card z-depth-0 project-summary \">\r\n                Thông báo\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst TIpsSumday = ({ tip }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{tip.title}</span>\r\n        <p>{tip.content}</p>\r\n        <p className=\"grey-text\">Xem Chi Tiết</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TIpsSumday;\r\n","import React from \"react\";\r\nimport TIpsSumday from \"./TIpsSumday\";\r\nimport { Link } from \"react-router-dom\";\r\nconst TipsItem = ({ tip }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {tip &&\r\n        tip.map((tip, index) => {\r\n          return (\r\n            <Link to={\"/tips/\" + tip.id} key={index}>\r\n              <TIpsSumday tip={tip}  />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TipsItem;\r\n","import React from \"react\";\r\nimport Nofitications from \"./Nofitications\";\r\nimport TipsItem from \"../tips/TipsItem\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFirestoreConnect, firebaseConnect } from \"react-redux-firebase\";\r\n\r\nexport default function Dashboard() {\r\n  useFirestoreConnect(\"tips\"); // sync tips collection from Firestore into redux\r\n  firebaseConnect(\"tips\");\r\n  const tip = useSelector(state => state.firestoreReducer.ordered.tips); // get data no mapState\r\n  return (\r\n    <div className=\"dashboard container\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n          <TipsItem tip={tip} key={tip} />\r\n        </div>\r\n        <div className=\"col s12 m6\">\r\n          <Nofitications />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nconst TipsDetail = props => {\r\n  console.log(props);\r\n  const { tip } = props;\r\n  if (tip) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{tip.title}</span>\r\n            <p>{tip.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Phuc Le</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const tips = state.firestoreReducer.data.tips;\r\n  const tip = tips ? tips[id] : null;\r\n  return {\r\n    tip: tip\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"tips\"\r\n    }\r\n  ])\r\n)(TipsDetail);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionsignIn } from \"../store/action/authAction\";\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    console.log(this.props.auth);\r\n    let { error } = this.props;\r\n    console.log(this.props.error);\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"black-text grey-text\"> SingIn</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn btn-pink\">Login </button>\r\n          </div>\r\n          <div>{error ? <p>{error}</p> : null}</div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: cer => dispatch(actionsignIn(cer))\r\n  };\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    error: state.authReducer.error\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      lastName: \"\",\r\n      firstName: \"\"\r\n    };\r\n  }\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"black-text grey-text\"> SingIn</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn btn-pink\">GO </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionTip } from \"../store/action/tipsAction\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { EditorState } from \"draft-js\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass CreateTips extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      content: EditorState.createEmpty()\r\n    };\r\n  }\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    this.props.actionTip(this.state);\r\n  };\r\n  onContentStateChange = content => {\r\n    this.setState({\r\n      content\r\n    });\r\n  };\r\n  onEditorStateChange = content => {\r\n    this.setState({\r\n      content\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { content } = this.state;\r\n    let { auth } = this.props;\r\n    if (!auth.uid){\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Vui lòng đăng ký thành viên để post bài',\r\n      })\r\n      return <Redirect to=\"/SignUp\"/>\r\n    }\r\n      return (\r\n        <div className=\"container\">\r\n          <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"black-text grey-text\"> CreateTips</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"content\">Content</label>\r\n              <textarea type=\"text\" id=\"content\" onChange={this.handleChange} />\r\n              <CKEditor\r\n                typ\r\n                id=\"content\"\r\n                editor={ClassicEditor}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  // const dataHtml = editor.setData(\"sadas\")\r\n                  this.setState({\r\n                    content: data\r\n                  });\r\n                }}\r\n                onInit={editor => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                }}\r\n                // onBlur={(event, editor) => {\r\n                //   console.log(\"Blur.\", editor);\r\n                // }}\r\n                // onFocus={(event, editor) => {\r\n                //   console.log(\"Focus.\", editor);\r\n                // }}\r\n              />\r\n              {/* <Editor onChange={this.handleChange} /> */}\r\n              {/* \r\n            <Editor\r\n              apiKey=\"jk9c3h3oj9ii5i1fjfgehqnmrscbu9nnydi2mnewmaiouyu3\"\r\n              value={this.state.content}\r\n              onEditorChange={this.handleEditorChange}\r\n              init={{ plugins: \"link table\" }}\r\n            /> */}\r\n            </div>\r\n            {/* <div>\r\n            <Editor\r\n              wrapperClassName=\"demo-wrapper\"\r\n              editorClassName=\"demo-editor\"\r\n              onEditorStateChange={this.onEditorStateChange}\r\n            />\r\n            <textarea\r\n              disabled\r\n              value={\r\n                content &&\r\n                draftToMarkdown(convertToRaw(content.getCurrentContent()))\r\n              }\r\n            /> */}\r\n            {/* </div> */}\r\n            <div>\r\n              <Editor\r\n                initialEditorState={content}\r\n                toolbarClassName=\"toolbarClassName\"\r\n                wrapperClassName=\"wrapperClassName\"\r\n                editorClassName=\"editorClassName\"\r\n                onEditorStateChange={this.onEditorStateChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button className=\"btn pink\">ADD </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebaseReducer.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    actionTip: data => dispatch(actionTip(data))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTips);\r\n","export const actionTip = data => {\r\n  return (dispatch, getState, { getFirestore, getFirebase }) => {\r\n    // async database\r\n\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"tips\")\r\n      .add({\r\n        ...data\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"ADD_TIPS\", data });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashbroad/Dashboard\";\nimport TipsDetail from \"./components/tips/TipsDetail\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateTips from \"./components/tips/CreateTips\";\nimport Test from \"./FireBase/test\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/SignIn\" component={SignIn} />\n          <Route path=\"/SignUp\" component={SignUp} />\n          <Route path=\"/CreateTips\" component={CreateTips} />\n          <Route path=\"/tips/:id\" component={TipsDetail} />\n\n          <Route path=\"/\" component={Dashboard} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  data: []\r\n};\r\n\r\nconst tipsReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TIPS\":\r\n      // state.data = [...state.data, action.data];\r\n      // return { ...state };\r\n      return state;\r\n      break;\r\n    default:\r\n      return state;\r\n\r\n    // return { ...state };\r\n    // break;\r\n  }\r\n};\r\nexport default tipsReducer;\r\n","const initState = {\r\n  error: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_OKE\":\r\n      return {\r\n        ...state,\r\n        error: action.null\r\n      };\r\n      case \"LOGOUT\":\r\n        console.log(\"LOGOUT OKE\")\r\n        return state\r\n  \r\n\r\n    case \"LOGIN_ERR\":\r\n      return { ...state, error: \"Login Fail\" };\r\n\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n};\r\nexport default authReducer;\r\n","import tipsReducer from \"./tipsReducerr\";\r\nimport authReducer from \"./authReducerss\";\r\nimport { combineReducers } from \"redux\";\r\n// import firestore redux\r\nimport { firestoreReducer } from \"redux-firestore\";\r\n// import firebase redux\r\nimport {firebaseReducer} from \"react-redux-firebase\"\r\nconst rootReducer = combineReducers({\r\n  tipsReducer: tipsReducer,\r\n  authReducer: authReducer,\r\n  firestoreReducer: firestoreReducer,\r\n  firebaseReducer:firebaseReducer\r\n});\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar config = {\r\n  apiKey: \"AIzaSyA1Xd3CYKtDFbOwUELpPIj5GZNYQ8dVoLw\",\r\n  authDomain: \"tipshuyenhoc.firebaseapp.com\",\r\n  databaseURL: \"https://tipshuyenhoc.firebaseio.com\",\r\n  projectId: \"tipshuyenhoc\",\r\n  storageBucket: \"tipshuyenhoc.appspot.com\",\r\n  messagingSenderId: \"335108276551\",\r\n  appId: \"1:335108276551:web:6a8845bd64c7dc04c04c62\",\r\n  measurementId: \"G-56LHSXW83N\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(config);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// config redux - redux-thunk\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider, useSelector } from \"react-redux\";\nimport rootReducer from \"./components/store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n// config firebase\nimport firebase from \"./config/fbConfig\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore\n} from \"redux-firestore\";\nimport {\n  getFirebase,\n  ReactReduxFirebaseProvider,\n  isLoaded\n} from \"react-redux-firebase\";\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebaseReducer.auth);\n  if (!isLoaded(auth))\n    return (\n      <div className=\"container text-center\">\n        <h1>VẠN PHẬT TÙY TÂM</h1>\n      </div>\n    );\n  return children;\n}\n\nconst middleWare = [thunk.withExtraArgument({ getFirestore, getFirebase })];\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(...middleWare), reduxFirestore(firebase))\n);\n// cho store o tren moi chay vi cap store truoc sau do moi config firebase get database\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n  //enableClaims: true // Get custom claims along with the profile\n};\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}